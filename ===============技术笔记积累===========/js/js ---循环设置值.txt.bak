//初始化页面
$(document).ready(function(){
	var groupIds="${groupIds}"; //所有的字符串连接：abc,def
	$("input[name='groupId']").each(function(){
		var index = this.value; //得到当前的字符串:abc
		if(${fn:contains(groupIds,index)}){
			//将符合条件的默认选中
			this.checked = true;
		}
		
	});  
}); 

<c:if test="${groupInfoList !=null}">
	<c:forEach items="${groupInfoList}" var="list" varStatus="i">
	<tr>
		<td class="th_border">
		   <input type="checkbox" value="${list.pk.groupId}" name="groupId">
		</td>
		<td class="th_border">${list.groupName}</td>
		<td class="th_border">${list.groupRemark}</td>
	</tr>
	</c:forEach> 
</c:if>




01.<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
02.上面的 uri 根据你的实际情况定。  
03.${fn:substring("你要截取的字符串"),beginIndex,endIndex}  
04. 
05.<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>  
06.下面是JSTL中自带的方法列表以及其描述  
07.函数名 函数说明 使用举例  
08.fn:contains 判定字符串是否包含另外一个字符串 <c:if test="${fn:contains(name, searchString)}">  
09.fn:containsIgnoreCase 判定字符串是否包含另外一个字符串(大小写无关) <c:if test="${fn:containsIgnoreCase(name, searchString)}">  
10.fn:endsWith 判定字符串是否以另外字符串结束 <c:if test="${fn:endsWith(filename, ".txt")}">  
11.fn:escapeXml 把一些字符转成XML表示，例如 <字符应该转为< ${fn:escapeXml(param:info)}  
12.fn:indexOf 子字符串在母字符串中出现的位置 ${fn:indexOf(name, "-")}  
13.fn:join 将数组中的数据联合成一个新字符串，并使用指定字符格开 ${fn:join(array, ";")}  
14.fn:length 获取字符串的长度，或者数组的大小 ${fn:length(shoppingCart.products)}  
15.fn:replace 替换字符串中指定的字符 ${fn:replace(text, "-", "•")}  
16.fn:split 把字符串按照指定字符切分 ${fn:split(customerNames, ";")}  
17.fn:startsWith 判定字符串是否以某个子串开始 <c:if test="${fn:startsWith(product.id, "100-")}">  
18.fn:substring 获取子串 ${fn:substring(zip, 6, -1)}  
19.fn:substringAfter 获取从某个字符所在位置开始的子串  
20.${fn:substringAfter(zip, "-")}  
21.fn:substringBefore 获取从开始到某个字符所在位置的子串 ${fn:substringBefore(zip, "-")}  
22.fn:toLowerCase 转为小写 ${fn.toLowerCase(product.name)}  
23.fn:toUpperCase 转为大写字符 ${fn.UpperCase(product.name)}  
24.fn:trim 去除字符串前后的空格 ${fn.trim(name)}  
25. 
26.函数  
27.描述  
28.fn:contains(string, substring)  
29.假如参数string中包含参数substring，返回true 
30.fn:containsIgnoreCase(string, substring)  
31.假如参数string中包含参数substring（忽略大小写），返回true 
32.fn:endsWith(string, suffix)  
33.假如参数 string 以参数suffix结尾，返回true 
34.fn:escapeXml(string)  
35.将有非凡意义的XML (和HTML)转换为对应的XML character entity code，并返回  
36.fn:indexOf(string, substring)  
37.返回参数substring在参数string中第一次出现的位置  
38.fn:join(array, separator)  
39.将一个给定的数组array用给定的间隔符separator串在一起，组成一个新的字符串并返回。  
40.fn:length(item)  
41.返回参数item中包含元素的数量。参数Item类型是数组、collection或者String。假如是String类型,返回值是String中的字符数。  
42.fn:replace(string, before, after)  
43.返回一个String对象。用参数after字符串替换参数string中所有出现参数before字符串的地方，并返回替换后的结果  
44.fn:split(string, separator)  
45.返回一个数组，以参数separator 为分割符分割参数string，分割后的每一部分就是数组的一个元素  
46.fn:startsWith(string, prefix)  
47.假如参数string以参数prefix开头，返回true 
48.fn:substring(string, begin, end)  
49.返回参数string部分字符串, 从参数begin开始到参数end位置，包括end位置的字符  
50.fn:substringAfter(string, substring)  
51.返回参数substring在参数string中后面的那一部分字符串  
52.fn:substringBefore(string, substring)  
53.返回参数substring在参数string中前面的那一部分字符串  
54.fn:toLowerCase(string)  
55.将参数string所有的字符变为小写，并将其返回  
56.fn:toUpperCase(string)  
57.将参数string所有的字符变为大写，并将其返回  
58.fn:trim(string)  
59.去除参数string 首尾的空格，并将其返回